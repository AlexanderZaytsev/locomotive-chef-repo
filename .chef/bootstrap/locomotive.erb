bash -c '
<%= "export http_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

if [ ! -f /usr/bin/chef-client ]; then
  aptitude update
  aptitude install -y ruby1.9.3 build-essential wget rubygems
fi

gem update --no-rdoc --no-ri
gem install ohai --no-rdoc --no-ri --verbose
gem install chef --no-rdoc --no-ri --verbose <%= bootstrap_version_string %>

mkdir -p /etc/chef 

<% if @chef_config[:encrypted_data_bag_secret] -%>
(
cat <<'EOP'
<%= encrypted_data_bag_secret %>
EOP
) > /tmp/encrypted_data_bag_secret
awk NF /tmp/encrypted_data_bag_secret > /etc/chef/encrypted_data_bag_secret
rm /tmp/encrypted_data_bag_secret
<% end -%>

<%# Generate Ohai Hints -%>
<% unless @chef_config[:knife][:hints].nil? || @chef_config[:knife][:hints].empty? -%>
mkdir -p /etc/chef/ohai/hints

<% @chef_config[:knife][:hints].each do |name, hash| -%>
(
cat <<'EOP'
<%= hash.to_json %>
EOP
) > /etc/chef/ohai/hints/<%= name %>.json
<% end -%>
<% end -%>

(
cat <<'EOP'
file_cache_path "/var/chef-solo"
cookbook_path "/var/chef-solo/cookbooks"
EOP
) > ~/solo.rb

(
cat <<'EOP'
{
  "nginx": {
     "init_style": "bluepill",
     "install_method": "source"
  },
  "run_list": ["recipe[nginx::http_ssl_module]", "recipe[nginx::passenger]", "recipe[nginx]"]
}
EOP
) > ~/node.json

chef-solo -j ~/node.json -c ~/solo.rb -r https://github.com/firmhouse/locomotive-chef-repo/tarball/master'
